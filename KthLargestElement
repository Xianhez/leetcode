import java.io.*;

class MyCode {
  public static void main (String[] args) {
    MyCode m = new MyCode();
    int[] intArray = new int[] {3,2,1,5,6,4};
    System.out.println(m.findKthLargest(intArray,2));
  }
  
 public int findKthLargest(int[] nums, int k) {

        k = nums.length - k;
        int low = 0;
        int high = nums.length - 1;
        while (low < high) {
            final int j = partition(nums, low, high);
            if(j < k) {
                low = j + 1;
            } else if (j > k) {
                high = j - 1;
            } else {
                break;
            }
        }
        return nums[k];
    }

    private int partition(int[] a, int low, int high) {

        int i = low;
        int j = high + 1;
        while(true) {
            while(i < high && less(a[++i], a[low]));
            while(j > low && less(a[low], a[--j]));
            if(i >= j) {
                break;
            }
            swap(a, i, j);
        }
        swap(a, low, j);
        return j;
    }

    private void swap(int[] a, int i, int j) {
        final int tmp = a[i];
        a[i] = a[j];
        a[j] = tmp;
    }

    private boolean less(int v, int w) {
        return v < w;
    }
}
