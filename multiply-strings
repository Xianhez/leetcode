import java.io.*;

class MyCode {
  public static void main (String[] args) {
    MyCode m = new MyCode();
    System.out.println(m.multiply("3141592653589793238462643383279502884197169399375105820974944592","2718281828459045235360287471352662497757247093699959574966967627"));
  }
  
  public  String padZeros (String s, int l){
    if(s.length() < l){s = "0" + s;}
    return s;
  }
  
    public String multiply(String num1, String num2) {
      double base = 10;
      int n = 0;
      
      if(num1.length() > num2.length()){
        n = num1.length();
      }n = num2.length();
      
      if (n == 1) {return Integer.toString(Integer.parseInt(num1) * Integer.parseInt(num2)); }
      if(n % 2 == 1){
       n = n + 1;
      } 
     
      
      //halve the strings
      String x = padZeros(num1,n);
      String xl = x.substring(0,n/2);
      String xr = x.substring(n/2,n);
      
      String y =  padZeros(num2,n);
      String yl = y.substring(0,n/2);
      String yr = y.substring(n/2,n);
      
      //calculate with recursive
      double p1 = Math.pow(base,(double)n) * Double.parseDouble(multiply(xl, yl));
      double p2 = Math.pow(base,(double)n/2) * (Double.parseDouble(multiply(xl, yr)) + Double.parseDouble(multiply(xr , yl)));
      double p3 = Double.parseDouble(multiply(xr , yr));
      
      return Double.toString(p1 + p2 + p3);
      
        //pow(base,n) * xl * xr + pow(base,n/2) * (xl * yr + xr * yl) + xr * yr;
  }
}
